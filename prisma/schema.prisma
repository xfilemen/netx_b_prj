generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?
  email    String?
  age      Int?
  cj_id    String?
  password String
}

model tbUser {
  userId     String    @id @map("user_id")
  compCd     String?   @map("comp_cd") @unique 
  deptName   String?   @map("dept_name")
  userName   String?   @map("user_name")
  mobileNum  String?   @map("mobile_num")
  userStatus String?   @map("user_status")
  mobNum1    String?   @map("mob_num_1")
  mobNum2    String?   @map("mob_num_2")
  mobNum3    String?   @map("mob_num_3")
  agrYn      String?   @map("agr_yn")
  regDt      DateTime? @map("reg_dt")
  regId      String?   @map("reg_id")
  modDt      DateTime? @map("mod_dt")
  modId      String?   @map("mod_id")

  comCode  tbComCode[] @relation("userCompCd")
  post1     tbPost[] @relation("userPostReg")
  post2     tbPost[] @relation("userPostMod")

  @@map("tb_user")
}

model tbLogin {
  userId        String    @map("user_id")        // CJ WORLD 계정
  seq           Int       @default(autoincrement()) @map("seq")  // 순번
  userPwd       String?   @map("user_pwd")       // 비밀번호
  pwdWrongCnt   Int?      @map("pwd_wrong_cnt")  // 로그인 시도 횟수
  regDt         DateTime? @map("reg_dt")         // 등록일
  regId         String?   @map("reg_id")         // 등록ID
  modDt         DateTime? @map("mod_dt")         // 수정일
  modId         String?   @map("mod_id")         // 수정ID

  @@id([userId, seq], map: "TB_LOGIN_pkey")
  @@map("tb_login")
}

model tbReqMgt {
  reqId         Int       @id @default(autoincrement()) @map("req_id")     // 요청ID, 자동 증가
  reqTitle      String?   @map("req_title")             // 요청 제목
  reqName       String?   @map("req_name")              // 요청명
  reqOrd        String?   @map("req_ord")               // 우선순위
  reqStatus     String?   @map("req_status")            // 진행상황
  reqType       String?   @map("req_type")              // 대내/외 구분
  reqHeadcount  Int?      @map("req_headcount")         // 인원
  reqPurp       String?   @map("req_purp")              // 목적
  useYn         String?   @map("use_yn")                // 사용 여부
  confDt        DateTime? @map("conf_dt")               // 승인일
  confId        String?   @map("conf_id")               // 승인자
  regDt         DateTime? @default(now()) @map("reg_dt")// 등록일, 기본값: 현재 시간
  regId         String?   @map("reg_id")                // 등록ID
  modDt         DateTime? @map("mod_dt")                // 수정일
  modId         String?   @map("mod_id")                // 수정ID

  
  reqDet        tbReqMgtDet[] @relation("ReqMgtToDet") // 요청 상세 관계

  @@map("tb_req_mgt")
}

model tbReqMgtDet {
  reqId           Int       @map("req_id")    // 요청ID
  reqDetId        Int       @default(autoincrement()) @map("req_det_id")        // 요청상세ID
  reqType         String?   @map("req_type")          // 유형
  reqHeadcount    Int?      @map("req_headcount")     // 인원
  reqJob          String?   @map("req_job")           // 직무구분
  reqJobDet       String?   @map("req_job_det")       // 직무구분상세
  reqGrade        String?   @map("req_grade")         // 등급
  reqInDt         String?   @map("req_in_dt")         // 투입 예정일
  reqOutDt        String?   @map("req_out_dt")        // 투입 종료일
  reqMm           Int?      @map("req_mm")            // M/M
  reqLoc          String?   @map("req_loc")           // 근무지
  reqSkill        String?   @map("req_skill")         // 필수 요구기술
  reqPrefSkill    String?   @map("req_pref_skill")    // 우대 요구기술
  useYn           String?   @map("use_yn")
  regDt           DateTime? @default(now()) @map("reg_dt") // 등록일
  regId           String?   @map("reg_id")            // 등록ID
  modDt           DateTime? @map("mod_dt")            // 수정일
  modId           String?   @map("mod_id")            // 수정ID

  req        tbReqMgt  @relation("ReqMgtToDet", fields: [reqId], references: [reqId]) // 요청 관계

  @@id([reqId, reqDetId])
  @@map("tb_req_mgt_det")
}

model tbReqWfInfo {
  reqId      Int       @map("req_id") @unique           // 요청ID
  wfId       Int       @id @default(autoincrement()) @map("wf_id")  // 요청인력ID
  wfType     String?   @map("wf_type")           // 유형
  wfJob      Int?      @map("wf_job")            // 직무구분
  wfGrade    String?   @map("wf_grade")          // 등급
  wfInDt     DateTime? @map("wf_in_dt")          // 투입 예정일
  wfOutDt    DateTime? @map("wf_out_dt")         // 투입 종료일
  wfMm       Int?      @map("wf_mm")             // M/M
  wfLoc      String?   @map("wf_loc")            // 근무지
  wfSkill    String?   @map("wf_skill")          // 상세 요구기술
  useYn      String?   @map("use_yn")            // 사용 여부
  regDt      DateTime? @default(now()) @map("reg_dt")  // 등록일
  regId      String?   @map("reg_id")            // 등록ID
  modDt      DateTime? @map("mod_dt")            // 수정일
  modId      String?   @map("mod_id")            // 수정ID

  @@map("tb_req_wf_info")
}

model tbAuth {
  authCd   String  @id @map("auth_cd") // 권한코드 (Primary Key)  @unique 
  authType String? @map("auth_type")   // 권한 유형
  authName String? @map("auth_name")   // 권한 명
  authDesc String? @map("auth_desc")   // 권한 설명
  useYn    String?   @map("use_yn")    // 사용 여부
  regDt    DateTime @default(now()) @map("reg_dt") // 등록일
  regId    String?  @map("reg_id")     // 등록ID
  modDt    DateTime? @map("mod_dt")    // 수정일
  modId    String?  @map("mod_id")     // 수정ID

  authUser  tbAuthUser[] @relation("auth")
  @@map("tb_auth")
}

model tbAuthUser {
  authCd   String  @map("auth_cd") // 권한코드
  userId   String  @map("user_id") // CJWORLD 계정
  useYn     String?   @map("use_yn")
  regDt    DateTime @default(now()) @map("reg_dt") // 등록일
  regId    String?  @map("reg_id") // 등록ID
  modDt    DateTime? @map("mod_dt") // 수정일
  modId    String?  @map("mod_id") // 수정ID

  auth     tbAuth?     @relation("auth", fields: [authCd], references: [authCd])

  @@id([authCd, userId])
  @@map("tb_auth_user")
}

model tbComCode {
  codeGrp   String    @map("code_grp")
  code      String    @map("code")
  codeName  String?   @map("code_name")
  codeOrd   Int?      @map("code_ord")
  temp1     String?   @map("temp1")
  temp2     String?   @map("temp2")
  temp3     String?   @map("temp3")
  regDt     DateTime? @map("reg_dt") @default(now())
  regId     String?   @map("reg_id") 
  modDt     DateTime? @map("mod_dt")
  modId     String?   @map("mod_id")
  useYn     String?   @map("use_yn")

  users     tbUser?     @relation("userCompCd", fields: [code], references: [compCd])

  @@id([codeGrp, code])
  @@map("tb_com_code")
}

model tbBoard {
  brdId   Int      @id @default(autoincrement()) @map("brd_id")  // 게시판ID
  brdNm   String   @map("brd_nm")                                  // 게시판명
  menuId  Int      @map("menu_id")                                 // 메뉴ID
  useYn   String   @map("use_yn") @default("Y")                    // 사용여부
  regDt   DateTime @map("reg_dt") @default(now())                  // 등록일
  regId   String   @map("reg_id")                                  // 등록ID
  modDt   DateTime @map("mod_dt")                                  // 수정일
  modId   String?  @map("mod_id")                                  // 수정ID (nullable)


  tbPost tbPost[] @relation("post")

  @@map("tb_board")
}

model tbPost {
  pstId       Int      @default(autoincrement()) @map("pst_id") // 게시물SEQ
  brdId       Int      @map("brd_id")  @unique                      // 게시판ID
  pstTitle    String?  @map("pst_title")                            // 제목
  pstContents String?  @map("pst_contents")                         // 내용
  viewYn      String?  @map("view_yn")                              // 노출 여부
  regDt       DateTime? @map("reg_dt") @default(now())              // 등록일
  regId       String?  @map("reg_id")                               // 등록ID
  modDt       DateTime? @map("mod_dt")                              // 수정일
  modId       String?  @map("mod_id")                               // 수정ID

  tbBoard     tbBoard? @relation("post",fields: [brdId], references: [brdId])
  tbUserReg   tbUser?  @relation("userPostReg",fields: [regId], references: [userId])
  tbUserMod   tbUser?  @relation("userPostMod",fields: [modId], references: [userId])


  @@id([pstId, brdId])
  @@map("tb_post")
}

model tbMenu {
  menuId     Int      @default(autoincrement()) @map("menu_id")        // 메뉴ID
  menuName   String   @map("menu_name")                               // 메뉴명
  menuSeq    Int      @map("menu_seq")                                // 메뉴순서
  menuUrl    String   @map("menu_url")                                // 메뉴 URL
  useYn      String   @map("use_yn")                                  // 사용여부
  regDt      DateTime @default(now()) @map("reg_dt")                   // 등록일
  regId      String?  @map("reg_id")                                  // 등록ID
  modDt      DateTime? @map("mod_dt")                                  // 수정일
  modId      String?  @map("mod_id")                                  // 수정ID

  @@id([menuId])                                                      
  @@map("tb_menu")                                                   
}

model tbMenuLog {
  accsLogSeq Int      @default(autoincrement()) @map("accs_log_seq")     // LOG 순번
  userId     String   @map("user_id")                                    // CJ WORLD 계정
  accsMenu   String   @map("accs_menu")                                  // 접근 메뉴
  accsType   String   @map("accs_type")                                  // 작업유형
  accsIp     String?  @map("accs_ip")                                    // 접근자 IP
  accsDt     DateTime? @map("accs_dt")                                   // 접근일
  accsEtc    String?  @map("accs_etc")                                   // 비고

  @@id([accsLogSeq, userId])                                          
  @@map("tb_menu_log")                                                   
}

model tbReqMgtLog {
  reqLogId    Int      @default(autoincrement()) @map("req_log_id")   // 요청 진행 내역 순번
  reqId       Int      @map("req_id")                                  // 요청ID
  reqLogDesc  String?  @map("req_log_desc")                            // 요청 진행 내역 내용
  regDt       DateTime @default(now()) @map("reg_dt")                  // 등록일
  regId       String?  @map("reg_id")                                  // 등록ID
  modDt       DateTime? @map("mod_dt")                                 // 수정일
  modId       String?  @map("mod_id")                                  // 수정ID

  @@id([reqLogId, reqId])                                              // 복합 Primary Key
  @@map("tb_req_mgt_log")                                              // 테이블 이름 매핑
}

model smsMsg {
  msgkey        Int      @id @default(autoincrement()) @map("msgkey")   // 메시지 키
  reqdate       DateTime @map("reqdate")                                // 요청 날짜
  serialnum     Int?     @map("serialnum")                              // 일련번호 (nullable)
  id            String?  @map("id") @db.VarChar(16)                     // ID (nullable)
  status        String   @default("1") @map("status") @db.VarChar(1)    // 상태
  rslt          String?  @default("00") @map("rslt") @db.VarChar(2)     // 결과 (nullable)
  type          String   @default("0") @map("type") @db.VarChar(1)      // 타입
  repcnt        Int      @default(0) @map("repcnt")                     // 반복 카운트
  phone         String   @default("") @map("phone") @db.VarChar(16)     // 전화번호
  callback      String   @default("") @map("callback") @db.VarChar(16)  // 콜백 번호
  rsltdate      DateTime? @map("rsltdate")                              // 결과 날짜 (nullable)
  reportdate    DateTime? @map("reportdate")                            // 보고 날짜 (nullable)
  msg           String   @map("msg")                                    // 메시지
  net           String?  @map("net") @db.VarChar(4)                     // 네트워크 (nullable)
  etc1          String?  @map("etc1") @db.VarChar(160)                  // 기타1 (nullable)
  etc2          String?  @map("etc2") @db.VarChar(160)                  // 기타2 (nullable)
  etc3          String?  @map("etc3") @db.VarChar(160)                  // 기타3 (nullable)
  etc4          String?  @map("etc4") @db.VarChar(160)                  // 기타4 (nullable)
  etc5          String?  @map("etc5") @db.VarChar(160)                  // 기타5 (nullable)
  etc6          String?  @map("etc6") @db.VarChar(160)                  // 기타6 (nullable)
  campaign_code String?  @map("campaign_code") @db.VarChar(20)          // 캠페인 코드 (nullable)
  origin_cid    String?  @map("origin_cid") @db.VarChar(10)             // 원본 CID (nullable)

  @@map("sms_msg")  // 테이블 이름
  @@index([status, reqdate], name: "idx_sms_msg_1")     // 인덱스 정의
  @@index([phone], name: "idx_sms_msg_2")               // 인덱스 정의
}

model tbAuthSmsVerify {
  authSmsId      Int       @id @default(autoincrement()) @map("auth_sms_id")
  authSmsCd      String    @db.VarChar(10) @map("auth_sms_cd")
  authSmsStatus  String    @default("000") @db.VarChar(10) @map("auth_sms_status")
  regDt          DateTime  @default(now()) @map("reg_dt")
  regId          String?   @db.VarChar(20) @map("reg_id")
  modDt          DateTime? @map("mod_dt")
  modId          String?   @db.VarChar(20) @map("mod_id")

  @@map("tb_auth_sms_verify")
}